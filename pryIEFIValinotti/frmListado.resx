<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>